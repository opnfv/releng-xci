---
##
# Edit the QEMU filesystem
# goals:
#   - remove waiting the network
#   - avoid local dhcp
#   - set a fixed ip using configdrive
#   - set a user_data using configdrive
# vars:
#   - node: a node item from nodes list
##

##
# Edit qcow
##

- name: ensure nbd is loaded
  modprobe:
    name: nbd
    state: present
    params: 'max_part=15'

- name: ensure nbd is disconnected
  shell: "qemu-nbd --disconnect /dev/nbd{{ nodes_index[ node.name ] }}"
  tags:
    - skip_ansible_lint

- name: ensure temporary mountpoint is present
  file:
    path: "/tmp/nbd_{{ idf.xci.pod_name }}_{{ node.name }}"
    state: directory
    mode: 0750

- name: "connect nbd to vm {}"
  shell:
    qemu-nbd --connect=/dev/nbd{{ nodes_index[ node.name ] }} --partition=1
    /var/lib/libvirt/images/{{ idf.xci.pod_name }}_{{ node.name }}.qcow2
  tags:
    - skip_ansible_lint

- name: Mount nbd
  mount:
    path: "/tmp/nbd_{{ idf.xci.pod_name }}_{{ node.name }}"
    src: "/dev/nbd{{ nodes_index[ node.name ] }}"
    fstype: ext4
    state: mounted

- name: disable cloud init network config and add a new user
  blockinfile:
    path: "/tmp/nbd_{{ idf.xci.pod_name }}_{{ node.name }}/etc/cloud/cloud.cfg"
    block: |
      network:
        config: disabled

- name: ensure disable root = false
  lineinfile:
    path: "/tmp/nbd_{{ idf.xci.pod_name }}_{{ node.name }}/etc/cloud/cloud.cfg"
    regexp: "disable_root: .*"
    line: "disable_root: false"
    state: present

- name: ensure hostname in /etc/hosts
  lineinfile:
    path: "/tmp/nbd_{{ idf.xci.pod_name }}_{{ node.name }}/etc/hosts"
    regexp: "^{{ item }} {{ node_name }}"
    line: "{{ item }} {{ node_name }}"
    state: present
  vars:
    node_name: "{{ idf.xci.pod_name }}-{{ node.name | regex_replace('_', '-')}}"
  with_items:
    - 127.0.0.1
    - "{{ net_config[ idf.xci.pxe_network ].network |\
      ip_add(idf.xci.ip_shift + nodes_index[ node.name ]) }}"

# David_Orange: THIS MUST BE REMOVED !
- name: create ssh folder for root
  file:
    path: "/tmp/nbd_{{ idf.xci.pod_name }}_{{ node.name }}/root/.ssh/"
    state: directory
    mode: 0770

- name: add ssh key to authorized keys in root
  copy:
    dest:
      /tmp/nbd_{{ idf.xci.pod_name }}_{{ node.name }}/root/.ssh/authorized_keys
    content: "{{ ssh_pub_key_content }}"
    mode: 0660

- name: ensure disable root = false
  lineinfile:
    path: "/tmp/nbd_{{ idf.xci.pod_name }}_{{ node.name }}/etc/hosts"
    regexp: "disable_root: .*"
    line: "disable_root: false"
    state: present

# END of ugly root part

- name: unmount nbd
  mount:
    path: "/tmp/nbd_{{ idf.xci.pod_name }}_{{ node.name }}"
    src: "/dev/nbd{{ nodes_index[ node.name ] }}p1"
    fstype: ext4
    state: absent

- name: ensure nbd is disconnected
  shell: "qemu-nbd --disconnect /dev/nbd{{ nodes_index[ node.name ] }}"
  when: "True"

##
# Create config drive ISO
##

- name: create user-data
  template:
    src: "templates/user_data.j2"
    dest: "/tmp/{{ idf.xci.pod_name }}_{{ node.name }}_user_data"

- name: create config disks
  include_role:
    name: jriguera.configdrive
  vars:
    configdrive_os_family: "Debian"
    configdrive_uuid: "{{ idf.xci.pod_name }}_configdrive-{{ node.name }}"
    configdrive_fqdn:
      "{{ idf.xci.pod_name }}-{{ node.name | regex_replace('_', '-') }}"
    configdrive_name: "{{ idf.xci.pod_name }}_{{ node.name }}-config"
    configdrive_availability_zone: ""
    configdrive_network_info: "True"
    configdrive_config_dir: "/var/lib/libvirt/images/"
    configdrive_volume_path: "/var/lib/libvirt/images/"
    configdrive_meta: {}
    configdrive_ssh_public_key_path:
      "{{ lookup('env','HOME') }}/.ssh/id_rsa.pub"
    configdrive_config_user_data_path:
      /tmp/{{ idf.xci.pod_name }}_{{ node.name }}_user_data
    configdrive_config_dir_delete: "True"
    configdrive_network_device_list:
      - device: "ens3"
        address: |
          {{ net_config[ idf.xci.pxe_network ].network |
          ip_add(idf.xci.ip_shift + nodes_index[ node.name ]) }}
        netmask: "{{ net_config[ idf.xci.pxe_network ].mask }}"
        gateway: "{{ net_config[ idf.xci.pxe_network ].gateway }}"
        nameservers:
          - "{{ net_config[ idf.xci.pxe_network ].dns }}"

- name: format configdrive to ISO
  become: "yes"
  shell: "/usr/bin/base64 --decode \
    {{ idf.xci.pod_name }}_configdrive-{{ node.name }}.gz |gzip -d > \
    {{ idf.xci.pod_name }}_configdrive-{{ node.name }}.iso"
  args:
    chdir: "/var/lib/libvirt/images/"
  tags:
    - skip_ansible_lint
