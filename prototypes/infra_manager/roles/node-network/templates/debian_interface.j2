##
# network '{{ intf.value.function }}'
##

auto {{ intf.key | regex_replace('\.0$', '') }}
iface {{ intf.key | regex_replace('\.0$', '') }} inet {{ 'static' if intf.value.type == 'static' and intf.value.ip else 'manual' }}
    {% if intf.value.vlan |Â int > 0 -%}
    vlan-raw-device {{ intf.key | regex_replace('\..*$', '') }}
    {% endif -%}
    {% if intf.value.ip and intf.value.type == 'static' -%}
    address {{ intf.value.ip }}
    network {{ intf.value.network }}
    netmask {{ intf.value.mask }}
    {% if intf.value.gateway -%}
    gateway {{ intf.value.gateway }}
    {% endif -%}
    {% if intf.value.dns -%}
    dns-nameservers {{ intf.value.dns }}
    {% endif %}
    {% endif %}

{% if intf.value.type == 'bridged' %}
auto {{ bridge_mapping[intf.value.function] }}
iface {{ bridge_mapping[intf.value.function] }} inet {{ 'static' if intf.value.ip else 'manual' }}
    bridge_stp off
    bridge_waitport 0
    bridge_fd 0
    bridge_ports {{ intf.key | regex_replace('\.0$', '') }}
    {% if intf.value.ip -%}
    address {{ intf.value.ip }}
    network {{ intf.value.network }}
    netmask {{ intf.value.mask }}
    {% if intf.value.gateway -%}
    gateway {{ intf.value.gateway }}
    {% endif -%}
    {% if intf.value.dns -%}
    dns-nameservers {{ intf.value.dns }}
    {% endif %}
    {% endif %}
{% if 'compute' in xci.nodes_roles[ansible_hostname] and bridge_mapping[intf.value.function] == 'br-vlan' -%}
    # Create veth pair, do not abort if already exists
    pre-up ip link add br-vlan-veth type veth peer name eth12 || true
    # Set both ends UP
    pre-up ip link set br-vlan-veth up
    pre-up ip link set eth12 up
    # Delete veth pair on DOWN
    post-down ip link del br-vlan-veth || true
    bridge_ports bond1 br-vlan-veth
{% endif -%}
{% endif %}
