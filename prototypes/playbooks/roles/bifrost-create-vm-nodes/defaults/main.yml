---
# defaults file for bifrost-create-vm-nodes
baremetal_json_file: '/tmp/baremetal.json'
test_vm_memory_size: "3072"
test_vm_num_nodes: 1
test_vm_domain_type: "qemu"
test_vm_arch: "x86_64"
test_vm_cpu: "host-model"
test_vm_nic: "virtio"
test_vm_groups: {}
test_vm_default_groups: "{{ lookup('env', 'DEFAULT_HOST_GROUPS').split() | default(['baremetal'], true) }}"
test_vm_disk_gib: "{{ lookup('env', 'VM_DISK') | default(10, true) }}"
test_vm_cpu_count: "{{ lookup('env', 'VM_CPU') | default(1, true) }}"
test_vm_disk_cache: "{{ lookup('env', 'VM_DISK_CACHE') | default('writeback', true) }}"
test_vm_node_name_base: "{{ lookup('env', 'NODEBASE') | default('testvm', true) }}"
test_vm_node_names: "{{ lookup('env', 'TEST_VM_NODE_NAMES').split() }}"

# NOTE(pas-ha) name and default are chosen to be the same
# as in 'bifrost-ironic-install' role
network_interface: "virbr0"
# NOTE(pas-ha) these correspond to settings for the libvirt network created by default
test_vm_network: "{{ lookup('env', 'VM_NET_BRIDGE') | default('default', true) }}"
test_vm_network_ip: "192.168.122.1"
test_vm_network_netmask: "255.255.255.0"
test_vm_network_enable_dhcp: true
test_vm_network_dhcp_start: "192.168.122.2"
test_vm_network_dhcp_end: "192.168.122.254"

test_vm_storage_pool: "{{ lookup('env', 'LIBVIRT_STORAGE_POOL') | default('default', true) }}"
test_vm_storage_pool_path: "/var/lib/libvirt/images"
test_vm_logdir: "/var/log/libvirt/baremetal_logs"
# NOTE(pas-ha) next two are generic values for most OSes, overridden by distro-specifc vars
test_vm_emulator: "/usr/bin/qemu-system-x86_64"
test_vm_machine: "pc-1.0"
# NOTE(pas-ha) not really tested with non-local qemu connections
test_vm_libvirt_uri: "{{ lookup('env', 'LIBVIRT_CONNECT_URI') | default('qemu:///system', true) }}"
# Settings related to installing bifrost in a virtual environment
enable_venv: false
bifrost_venv_dir: "{{ lookup('env', 'VENV') | default('/opt/stack/bifrost') }}"
bifrost_venv_env:
  VIRTUAL_ENV: "{{ bifrost_venv_dir }}"
  PATH: "{{ bifrost_venv_dir }}/bin:{{ ansible_env.PATH }}" # include regular path via lookup env
reqs_git_folder: /opt/stack/requirements
upper_constraints_file: "{{ lookup('env', 'UPPER_CONSTRAINTS_FILE') | default(reqs_git_folder + '/upper-constraints.txt', True) }}"
