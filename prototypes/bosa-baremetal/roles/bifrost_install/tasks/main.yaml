---
##
# Get bifrost sources
##
- name: "clone bifrost {{bifrost_branch}}"
  git:
    repo: "{{ bifrost_url }}"
    dest: "{{ bifrost_path }}"
    version: "{{ bifrost_branch }}"

##
# generate baremetal and target inventory
##
- name: copy bifrost target vars
  template:
    dest: "{{ bifrost_path }}/playbooks/inventory/group_vars/target"
    src: "templates/target.j2"
- name: copy bifrost baremetal vars
  template:
    dest: "{{ bifrost_path }}/playbooks/inventory/group_vars/baremetal"
    src: "templates/baremetal.j2"

##
# setup bifrost
##
- name: setup bifrost ansible environment
  shell: "./scripts/env-setup.sh"
  args:
    chdir: "{{ bifrost_path }}/"
  environment:
    VENV: "{{ bifrost_venv_folder if bifrost_enable_venv else '' }}"
- name: Set bifrost-ansible wrapper
  template:
    dest: "/usr/local/bin/bifrost-ansible"
    src: "templates/bifrost-ansible.j2"
    mode: 0500
- name: Set bifrost-pip wrapper
  template:
    dest: "/usr/local/bin/bifrost-pip"
    src: "templates/bifrost-pip.j2"
    mode: 0500

##
# remove old images and update image generation parameters
##
- name: correct bifrost image generation
  lineinfile:
    path: "{{ bifrost_path }}/playbooks/install.yaml"
    regexp: '^(.*) serial-console(.*)$'
    line: '\1 enable-serial-console\2'
    backrefs: 'yes'
- name: Remove old image
  file:
    path: "/httpboot/deployment_image*"
    state: absent

##
# install bifrost
##
- name: Install bifrost
  shell: >
    bifrost-ansible -i inventory/target install.yaml
    -e staging_drivers_include=true;
  args:
    chdir: "{{ bifrost_path }}/playbooks/"
# Upgrade pyasn1 as it make ironic conductor fail
# "hardware type or interface pxe_ilo could not be loaded"
- name: Install bifrost
  shell: "bifrost-pip install pyasn1 --upgrade"
- service:
    name: ironic-conductor
    state: restarted
- name: install libs needed outside the VENV
  pip:
    name: "{{ item }}"
  with_items:
    - jsonpatch
    - shade
  when: bifrost_enable_venv

##
# update dnsmasq
##
- name: correct dnsmasq config - default gateway
  lineinfile:
    path: /etc/dnsmasq.conf
    regexp: '^dhcp-option=3'
    line: "dhcp-option=3,{{ net_config['admin'].gateway }}"
- service:
    name: dnsmasq
    state: restarted
