---
- hosts: opnfv
  remote_user: root
  vars_files:
    - "{{ xci_path }}/xci/var/opnfv.yml"

  tasks:
    - name: Set kubernetes service account permissions
      command: "kubectl create clusterrolebinding add-on-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:default"
      changed_when: false

    - name: Set kubernetes node labels
      command: "kubectl label nodes {{ item }} --all"
      changed_when: false
      with_items:
        - openstack-control-plane=enabled
        - openstack-compute-node=enabled
        - openstack-helm-node-class=primary
        - openvswitch=enabled
        - linuxbridge=enabled
        - ceph-mon=enabled
        - ceph-osd=enabled
        - ceph-mds=enabled
        - ceph-mgr=enabled
        - ceph-rgw=enabled

    - name: Create directories
      file:
        path: /root/{{ item }}
        state: directory
      with_items:
        ['repos','tmp', '.helm/repository/local']

    - name: Clone openstack-helm
      git:
        repo: "{{ osh_git_url }}"
        dest: /root/repos/openstack-helm
        version: "{{ osh_version }}"
        update: true
        force: true
      register: git_clone
      until: git_clone is success
      retries: 2
      delay: 5

    - name: Clone openstack-helm-infra
      git:
        repo: "{{ osh_infra_git_url }}"
        dest: /root/repos/openstack-helm-infra
        version: "{{ osh_infra_version }}"
        update: true
        force: true
      register: git_clone
      until: git_clone is success
      retries: 2
      delay: 5

    - name: Get helm
      get_url:
        url: https://storage.googleapis.com/kubernetes-helm/helm-v2.13.0-linux-amd64.tar.gz
        dest: tmp

    - name: Uncompress helm package
      command: "tar zxvf  tmp/helm-v2.13.0-linux-amd64.tar.gz --strip-components=1 -C tmp/"
      changed_when: false
      tags:
        - skip_ansible_lint

#    - name: Uncompress helm package
#      unarchive:
#        src: tmp/helm-v2.13.0-linux-amd64.tar.gz
#        dest: tmp
#        remote_src: yes

    - name: Put helm in system binaries
      copy:
        src: tmp/helm
        dest: /usr/bin/helm
        remote_src: yes
        mode: 0755

    - name: Create helm-serve service file
      copy:
        dest: "/etc/systemd/system/helm-serve.service"
        content: |
          [Unit]
          Description=Helm Server
          After=network.target
          [Service]
          User=root
          Restart=always
          ExecStart=/usr/bin/helm serve
          [Install]
          WantedBy=multi-user.target
        mode: 0640

    - name: Start helm-serve service
      service:
        name: helm-serve
        state: started
        enabled: yes

    - name: Wait for helm-serve service to start
      wait_for:
        port: 8879
        host: 127.0.0.1

    - name: Install pyhelm
      pip:
        name: pyhelm

#### to check if helm module is available/better at this point
    - name: Init helm
      command: "helm init"
      changed_when: false

    - name: Remove stable (external) service from helm
      command: "helm repo remove stable"
      changed_when: false

    - name: Add local repositories service to helm
      command: "helm repo add local http://localhost:8879/charts"
      changed_when: false

    - name: Make charts from infra
      make:
        chdir: /root/repos/openstack-helm-infra
        target: "{{ item }}"
      with_items:
        - helm-toolkit
        - ingress
        - mariadb
        - rabbitmq
        - memcached
        - ceph-mon
        - ceph-osd
        - ceph-client
        - ceph-provisioners
        - ceph-rgw
        - openvswitch
        - libvirt

    - name: Install packages
      apt:
        name: "{{ packages }}"
      vars:
        packages:
        - patch
        - ipcalc
        - jq
        - nmap

#in search for a better way
    - name: Install packages in kubernetes nodes
      command: "ssh -o \"StrictHostKeyChecking no\" root@{{ item }} \"apt-get install -y ceph-common rbd-nbd apparmor\""
      changed_when: false
      with_items:
        - "192.168.122.3"
        - "192.168.122.4"

    - name: Create patch to get correct clouds.yaml file
      copy:
        dest: "/tmp/080-keystone.sh.patch"
        content: |
          --- 080-keystone.sh.old	2019-04-23 14:16:19.099639355 +0300
          +++ 080-keystone.sh	2019-04-23 14:17:00.055637659 +0300
          @@ -34,4 +34,5 @@
           helm status keystone
           export OS_CLOUD=openstack_helm
           sleep 30 #NOTE(portdirect): Wait for ingress controller to update rules and restart Nginx
          +cp /etc/openstack/clouds.yaml .
           openstack endpoint list
        mode: 0644

    - name: Create patch to disable apparmor
      copy:
        dest: "/tmp/nova-values.yaml.patch"
        content: |
          --- values.yaml.old	2019-04-08 08:46:19.376730028 +0000
          +++ values.yaml	2019-04-08 08:49:49.013402552 +0000
          @@ -1957,7 +1957,7 @@
             mandatory_access_control:
               type: apparmor
               nova-compute-default:
          -      nova-compute-default: localhost/docker-default
          +      nova-compute-default: unconfined
             user:
               nova:
                 uid: 42424
      mode: 0644

    - name: Create patch to fix device name and prevent launch of dns container
      copy:
        dest: "/tmp/170-setup-gateway.sh.patch"
        content: |
          --- 170-setup-gateway.sh.old	2019-04-24 14:37:37.790137021 +0300
          +++ 170-setup-gateway.sh	2019-04-24 16:33:42.061412635 +0300
          @@ -14,13 +14,13 @@
           #    License for the specific language governing permissions and limitations
           #    under the License.
           set -xe
          -
          -# Assign IP address to br-ex
          +#
          +# Assign IP address to br-vlan
           OSH_BR_EX_ADDR="172.24.4.1/24"
           OSH_EXT_SUBNET="172.24.4.0/24"
          -sudo ip addr add ${OSH_BR_EX_ADDR} dev br-ex
          -sudo ip link set br-ex up
          -
          +sudo ip addr add ${OSH_BR_EX_ADDR} dev br-vlan
          +sudo ip link set br-vlan up
          +#
           # NOTE(portdirect): With Docker >= 1.13.1 the default FORWARD chain policy is
           # configured to DROP, for the l3 agent to function as expected and for
           # VMs to reach the outside world correctly this needs to be set to ACCEPT.
          @@ -29,20 +29,3 @@
           # Setup masquerading on default route dev to public subnet
           DEFAULT_ROUTE_DEV="$(sudo ip -4 route list 0/0 | awk '{ print $5; exit }')"
           sudo iptables -t nat -A POSTROUTING -o ${DEFAULT_ROUTE_DEV} -s ${OSH_EXT_SUBNET} -j MASQUERADE
          -
          -# NOTE(portdirect): Setup DNS for public endpoints
          -sudo docker run -d \
          -  --name br-ex-dns-server \
          -  --net host \
          -  --cap-add=NET_ADMIN \
          -  --volume /etc/kubernetes/kubelet-resolv.conf:/etc/kubernetes/kubelet-resolv.conf:ro \
          -  --entrypoint dnsmasq \
          -  docker.io/openstackhelm/neutron:ocata \
          -    --keep-in-foreground \
          -    --no-hosts \
          -    --bind-interfaces \
          -    --resolv-file=/etc/kubernetes/kubelet-resolv.conf \
          -    --address="/svc.cluster.local/${OSH_BR_EX_ADDR%/*}" \
          -    --listen-address="${OSH_BR_EX_ADDR%/*}"
          -sleep 1
          -sudo docker top br-ex-dns-server
      mode: 0644

    - name: Create patch to adjust validation stack parameters
      copy:
        dest: "/tmp/heat-public-net-deployment.yaml.patch"
        content: |
          --- heat-public-net-deployment.yaml.old	2019-04-25 08:19:33.202181094 +0000
          +++ heat-public-net-deployment.yaml	2019-04-25 08:25:15.825539349 +0000
          @@ -45,4 +45,4 @@
                   get_param: subnet_gateway
                 enable_dhcp: false
                 dns_nameservers:
          -        - 10.96.0.10
          +        - 10.233.0.3
      mode: 0644

    - name: Apply the patches
      patch:
        src: "/tmp/{{ item.source }}.patch"
        dest: "/root/repos/openstack-helm/{{ item.path }}/{{ item.name }}"
        remote_src: yes
      with_items:
        - { source: "080-keystone.sh", name: "080-keystone.sh", path: "tools/deployment/developer/common" }
        - { source: "nova-values.yaml", name: "values.yaml", path: "nova" }
        - { source: "170-setup-gateway.sh", name: "170-setup-gateway.sh", path: "tools/deployment/developer/common" }
        - { source: "heat-public-net-deployment.yaml", name: "heat-public-net-deployment.yaml", path: "tools/gate/files" }

    - name: Modify resolv.conf file and create route to DNS patch
      copy:
        dest: "/root/repos/openstack-helm-infra/route_to_dns.sh"
        content: |
          #!/bin/bash
          kube_service_addresses=$(grep -r 'kube_service_addresses:' /root/releng-xci/.cache/repos/kubespray/opnfv_inventory/group_vars/k8s-cluster.yml | sed -e 's/kube_service_addresses: //')
          echo $kube_service_addresses
          ip route add $kube_service_addresses via 192.168.122.3 dev br-vlan onlink
          ip_route=$(ip r)
          echo $ip_route
          cat > /etc/resolv.conf <<EOF
          search svc.cluster.local cluster.local
          nameserver 10.233.0.3
          nameserver 192.168.122.1
          EOF
          chattr +i /etc/resolv.conf
          sed -i 's/10.96.0.10/10.233.0.3/gi' /root/repos/openstack-helm-infra/kube-dns/values.yaml
        mode: 0755

    - name: Apply route_to_dns patch
      command: ./route_to_dns.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm-infra

# These tasks call OSH installation shell scripts
# (possibly) they'll be broken down to separate tasks bypassing the scripts

    - name: Setup Clients
      command: ./tools/deployment/developer/common/020-setup-client.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy the ingress controller
      command: ./tools/deployment/developer/common/030-ingress.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy Ceph
      command: ./tools/deployment/developer/ceph/040-ceph.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Activate the openstack namespace to be able to use Ceph
      command: ./tools/deployment/developer/ceph/045-ceph-ns-activate.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy MariaDB
      command: ./tools/deployment/developer/ceph/050-mariadb.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy RabbitMQ
      command: ./tools/deployment/developer/ceph/060-rabbitmq.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy memcached
      command: ./tools/deployment/developer/ceph/070-memcached.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy Keystone
      command: ./tools/deployment/developer/ceph/080-keystone.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy Heat
      command: ./tools/deployment/developer/ceph/090-heat.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy Horizon
      command: ./tools/deployment/developer/ceph/100-horizon.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy Rados Gateway for object store
      command: ./tools/deployment/developer/ceph/110-ceph-radosgateway.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy Glance
      command: ./tools/deployment/developer/ceph/120-glance.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy Cinder
      command: ./tools/deployment/developer/ceph/130-cinder.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy OpenvSwitch
      command: ./tools/deployment/developer/ceph/140-openvswitch.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy Libvirt
      command: ./tools/deployment/developer/ceph/150-libvirt.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Deploy Compute Kit (Nova and Neutron)
      command: ./tools/deployment/developer/ceph/160-compute-kit.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

    - name: Setup the gateway to the public network
      command: ./tools/deployment/developer/ceph/170-setup-gateway.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

# Deployment validation
    - name: Exercise the cloud
      command: ./tools/deployment/developer/common/900-use-it.sh
      changed_when: false
      args:
        chdir: /root/repos/openstack-helm

