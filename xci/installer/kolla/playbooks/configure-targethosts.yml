---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2018 Intel Corporation.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
- hosts: control
  remote_user: root
  vars_files:
    - "{{ XCI_PATH }}/xci/var/opnfv.yml"

  environment:
    http_proxy: "{{ lookup('env','http_proxy') }}"
    https_proxy: "{{ lookup('env','https_proxy') }}"
    no_proxy: "{{ lookup('env','no_proxy') }}"
    HTTP_PROXY: "{{ lookup('env','http_proxy') }}"
    HTTPS_PROXY: "{{ lookup('env','https_proxy') }}"
    NO_PROXY: "{{ lookup('env','no_proxy') }}"
  pre_tasks:
    - name: Load distribution variables
      include_vars:
        file: "{{ item }}"
      with_items:
        - "{{ XCI_PATH }}/xci/var/{{ ansible_os_family }}.yml"
        - "{{ XCI_FLAVOR_ANSIBLE_FILE_PATH }}/flavor-vars.yml"
  roles:
    - role: peru.proxy_settings
      proxy_settings_http_proxy: "{{ lookup('env','http_proxy') }}"
      proxy_settings_https_proxy: "{{ lookup('env','https_proxy') }}"
      proxy_settings_ftp_proxy: "{{ lookup('env','ftp_proxy') }}"
      proxy_settings_no_proxy: "{{ lookup('env','no_proxy') }}"
      when:
        - lookup('env','http_proxy') is defined
        - lookup('env','https_proxy') is defined
        - lookup('env','ftp_proxy') is defined
        - lookup('env','no_proxy') is defined
        - lookup('env','http_proxy') != ""
        - lookup('env','https_proxy') != ""
        - lookup('env','ftp_proxy') != ""
        - lookup('env','no_proxy') != ""
    - role: configure-network
    # we need to force sync time with ntp or the nodes will be out of sync timewise
    - role: synchronize-time
    - role: install-docker
  tasks:
    - name: add public key to host
      copy:
        src: "{{ XCI_PATH }}/xci/files/authorized_keys"
        dest: /root/.ssh/authorized_keys
    - name: install kolla-ansible dependencies
      package:
        name: "{{ kolla_packages }}"
        state: latest
    - name: pip install kolla dependencies
      pip:
        name: docker

- hosts: compute
  remote_user: root
  vars_files:
    - "{{ XCI_PATH }}/xci/var/opnfv.yml"

  environment:
    http_proxy: "{{ lookup('env','http_proxy') }}"
    https_proxy: "{{ lookup('env','https_proxy') }}"
    no_proxy: "{{ lookup('env','no_proxy') }}"
    HTTP_PROXY: "{{ lookup('env','http_proxy') }}"
    HTTPS_PROXY: "{{ lookup('env','https_proxy') }}"
    NO_PROXY: "{{ lookup('env','no_proxy') }}"
  pre_tasks:
    - name: Load distribution variables
      include_vars:
        file: "{{ item }}"
      with_items:
        - "{{ XCI_PATH }}/xci/var/{{ ansible_os_family }}.yml"
        - "{{ XCI_FLAVOR_ANSIBLE_FILE_PATH }}/flavor-vars.yml"
  roles:
    - role: peru.proxy_settings
      proxy_settings_http_proxy: "{{ lookup('env','http_proxy') }}"
      proxy_settings_https_proxy: "{{ lookup('env','https_proxy') }}"
      proxy_settings_ftp_proxy: "{{ lookup('env','ftp_proxy') }}"
      proxy_settings_no_proxy: "{{ lookup('env','no_proxy') }}"
      when:
        - lookup('env','http_proxy') is defined
        - lookup('env','https_proxy') is defined
        - lookup('env','ftp_proxy') is defined
        - lookup('env','no_proxy') is defined
        - lookup('env','http_proxy') != ""
        - lookup('env','https_proxy') != ""
        - lookup('env','ftp_proxy') != ""
        - lookup('env','no_proxy') != ""
    - role: configure-network
    # we need to force sync time with ntp or the nodes will be out of sync timewise
    - role: synchronize-time
    - role: install-docker
  tasks:
    - name: add public key to host
      copy:
        src: "{{ XCI_PATH }}/xci/files/authorized_keys"
        dest: /root/.ssh/authorized_keys
    - name: install kolla-ansible dependencies
      package:
        name: "{{ kolla_packages }}"
        state: latest
    - name: pip install kolla dependencies
      pip:
        name: docker

