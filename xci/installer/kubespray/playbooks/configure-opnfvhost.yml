---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
- hosts: opnfv
  remote_user: root
  vars_files:
    - "{{ xci_path }}/xci/var/opnfv.yml"

  environment:
    http_proxy: "{{ lookup('env','http_proxy') }}"
    https_proxy: "{{ lookup('env','https_proxy') }}"
    no_proxy: "{{ lookup('env','no_proxy') }}"
    HTTP_PROXY: "{{ lookup('env','http_proxy') }}"
    HTTPS_PROXY: "{{ lookup('env','https_proxy') }}"
    NO_PROXY: "{{ lookup('env','no_proxy') }}"
  roles:
    - role: peru.proxy_settings
      proxy_settings_http_proxy: "{{ lookup('env','http_proxy') }}"
      proxy_settings_https_proxy: "{{ lookup('env','https_proxy') }}"
      proxy_settings_ftp_proxy: "{{ lookup('env','ftp_proxy') }}"
      proxy_settings_no_proxy: "{{ lookup('env','no_proxy') }}"

  tasks:
    - name: Load distribution variables
      include_vars:
        file: "{{ item }}"
      with_items:
        - "{{ xci_path }}/xci/var/{{ ansible_os_family }}.yml"
    - name: Set facts for remote deployment
      set_fact:
        remote_xci_path: "{{ ansible_env.HOME }}/releng-xci"
        remote_xci_flavor_files: "{{ ansible_env.HOME }}/releng-xci/xci/installer/{{ installer_type }}/files/{{ xci_flavor }}"
        remote_xci_playbooks: "{{ ansible_env.HOME }}/releng-xci/xci/playbooks"

    - name: Copy releng-xci to remote host
      synchronize:
        src: "{{ xci_path }}/"
        dest: "{{ remote_xci_path }}"
        recursive: yes
        delete: yes

    - name: delete the opnfv_inventory directory
      file:
        path: "{{ remote_xci_path }}/.cache/repos/kubespray/opnfv_inventory"
        state: absent
    - name: copy kubespray inventory directory
      command: "cp -rf {{ remote_xci_flavor_files }}/inventory \
                   {{ remote_xci_path }}/.cache/repos/kubespray/opnfv_inventory"
      args:
        creates: "{{ remote_xci_path }}/.cache/repos/kubespray/opnfv_inventory"
    - name: make sure kubespray/opnfv_inventory/group_vars/ exist
      file:
        path: "{{ remote_xci_path }}/.cache/repos/kubespray/opnfv_inventory/group_vars"
        state: directory
    - include: "{{ xci_path }}/xci/playbooks/bootstrap-scenarios.yml"
    - name: "Configure http_proxy"
      lineinfile:
        path: "{{ remote_xci_path }}/.cache/repos/kubespray/opnfv_inventory/group_vars/k8s-cluster.yml"
        regexp: "^#http_proxy: .*"
        line: "{{ 'http_proxy: ' + lookup('env','http_proxy') }}"
      when:
        - lookup('env','http_proxy') != ""
    - name: "Configure https_proxy"
      lineinfile:
        path: "{{ remote_xci_path }}/.cache/repos/kubespray/opnfv_inventory/group_vars/k8s-cluster.yml"
        regexp: "^#https_proxy: .*"
        line: "{{ 'https_proxy: ' + lookup('env','https_proxy') }}"
      when:
        - lookup('env','https_proxy') != ""
    - name: "Configure no_proxy"
      lineinfile:
        path: "{{ remote_xci_path }}/.cache/repos/kubespray/opnfv_inventory/group_vars/k8s-cluster.yml"
        regexp: "^#no_proxy: .*"
        line: "{{ 'no_proxy: ' + lookup('env','no_proxy') }}"
      when:
        - lookup('env','no_proxy') != ""
    - name: Install required packages
      package:
        name: "{{ kube_require_packages[ansible_pkg_mgr] }}"
        state: present
        update_cache: "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}"
      when: xci_flavor == 'aio'

    - name: change dashboard server type to NodePort
      lineinfile:
        path: "{{ remote_xci_path }}/.cache/repos/kubespray/roles/kubernetes-apps/ansible/templates/dashboard.yml.j2"
        insertafter: 'targetPort'
        line: "  type: NodePort"

    - name: pip install required packages
      pip:
        name: "{{ item.name }}"
        version: "{{ item.version | default(omit) }}"
      with_items:
        - { name: 'ansible', version: "{{ xci_kube_ansible_pip_version }}" }
        - { name: 'netaddr' }

    - name: Configure SSL certificates
      include_tasks: "{{ xci_path }}/xci/playbooks/manage-ssl-certs.yml"

    - name: fetch xci environment
      copy:
        src: "{{ xci_path }}/.cache/xci.env"
        dest: /root/xci.env

    - name: Manage SSH keys
      include_tasks: "{{ xci_path }}/xci/playbooks/manage-ssh-keys.yml"
