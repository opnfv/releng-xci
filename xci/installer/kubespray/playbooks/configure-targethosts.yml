---
- hosts: all
  remote_user: root
  tasks:
    - name: Manage SSH keys
      include_tasks: "{{ xci_path }}/xci/playbooks/manage-ssh-keys.yml"
    - name: Install required packages
      package:
        name: "{{ kube_require_packages[ansible_pkg_mgr] }}"
        state: present
        update_cache: "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}"

- hosts: kube-master
  remote_user: root
  vars_files:
    - "{{ xci_path }}/xci/var/opnfv.yml"
  pre_tasks:
    - name: Load distribution variables
      include_vars:
        file: "{{ xci_path }}/xci/var/{{ ansible_os_family }}.yml"
  roles:
    - role: "keepalived"
      when:  xci_flavor == 'ha'
    - role: "haproxy_server"
      haproxy_service_configs: "{{ haproxy_default_services}}"
      haproxy_user_ssl_cert: "/etc/ssl/certs/xci.crt"
      haproxy_user_ssl_key: "/etc/ssl/private/xci.key"
      when:  xci_flavor == 'ha'

# NOTE(hwoarang) Kubenet expects networking to be prepared by the administrator so it's necessary
# to do that as part of the node configuration. All we need is to add static routes on every node
# so cbr0 interfaces can talk to each other.
- name: Prepare networking for kubenet
  hosts: k8s-cluster
  gather_facts: True
  become: yes
  vars_files:
    - "{{ xci_path }}/xci/var/opnfv.yml"
  tasks:
    - name: Configure static routes
      block:
        - name: Collect cbr0 information from the nodes
          set_fact:
            kubenet_xci_static_routes:
              - { 'network': '10.0.233.64/24', 'gateway': '192.168.122.3', flavors: ['mini', 'noha', 'ha'] }
              - { 'network': '10.0.233.65/24', 'gateway': '192.168.122.4', flavors: ['mini', 'noha', 'ha'] }
              - { 'network': '10.0.233.66/24', 'gateway': '192.168.122.5', flavors: ['mini', 'noha', 'ha'] }
              - { 'network': '10.0.233.67/24', 'gateway': '192.168.122.6', flavors: ['noha', 'ha'] }
              - { 'network': '10.0.233.68/24', 'gateway': '192.168.122.7', flavors: ['ha'] }

        - name: Add static routes on each node
          shell: "ip route show | grep -q {{ item.network }} || ip route add {{ item.network }} via {{ item.gateway }}"
          with_items: "{{ kubenet_xci_static_routes }}"
          loop_control:
            label: item.network
          when: "xci_flavor in item.flavor"
      when: deploy_scenario == 'k8-nosdn-nofeature'

    - name: Ensure rp_filter is disabled on localhost
      sysctl:
        name: net.ipv4.conf.all.rp_filter
        sysctl_set: yes
        state: present
        value: "{{ deploy_scenario == 'k8-nosdn-nofeature' | ternary(0, 1) }}"
        reload: yes
      delegate_to: localhost
      run_once: True
