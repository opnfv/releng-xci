- name: Change tiller host
  copy:
    dest: "/root/repos/tiller_host.sh"
    content: |
      #!/bin/bash
      sed -i 's#armada apply /tmp/$manifest.yaml#armada apply /tmp/$manifest.yaml --debug --tiller-host localhost#gi' /root/repos/openstack-helm/tools/deployment/armada/030-armada-apply-manifests.sh
      sed -i 's#armada apply /tmp/updated-$manifest.yaml#armada apply /tmp/updated-$manifest.yaml --tiller-host localhost#gi' /root/repos/openstack-helm/tools/deployment/armada/035-armada-update-uuid.sh
      sed -i 's#armada apply /tmp/updated-armada-osh.yaml#armada apply /tmp/updated-armada-osh.yaml --tiller-host localhost#gi' /root/repos/openstack-helm/tools/deployment/armada/035-armada-update-uuid.sh
    mode: 0755

- name: Apply Change tiller host patch
  command: ./tiller_host.sh
  changed_when: false
  args:
    chdir: /root/repos/

- name: Expose tiller's port to localhost
  copy:
    dest: "/root/repos/tiller_port.sh"
    content: |
      #!/bin/bash
      TILLER_POD=$(kubectl get pods --all-namespaces | grep tiller | awk '{ print $2 }')
      TILLER_NSPACE=$(kubectl get pods --all-namespaces | grep tiller | awk '{ print $1 }')
      nohup bash -c "while true; do kubectl port-forward pod/$TILLER_POD -n $TILLER_NSPACE 44134:44134 &>/dev/null ; done &"
    mode: 0755

- name: Apply Expose tiller's port to localhost patch
  command: ./tiller_port.sh
  changed_when: false
  args:
    chdir: /root/repos/

- name: Rally test patch
  copy:
    dest: "/root/repos/rally_patch.sh"
    content: |
      #!/bin/bash
      sed -i  '/AUTO_REMOVE_USER:="true"/a if [ $RALLY_ENV_NAME == "osh-neutron" ]; then export AUTO_REMOVE_USER=false;fi' /root/repos/openstack-helm-infra/helm-toolkit/templates/scripts/_rally_test.sh.tpl
      sed -i  '/AUTO_REMOVE_USER:="true"/a if [ $RALLY_ENV_NAME == "osh-nova" ]; then export AUTO_REMOVE_USER=false;fi' /root/repos/openstack-helm-infra/helm-toolkit/templates/scripts/_rally_test.sh.tpl
      sed -i  '/AUTO_REMOVE_USER:="true"/a echo $RALLY_ENV_NAME' /root/repos/openstack-helm-infra/helm-toolkit/templates/scripts/_rally_test.sh.tpl
    mode: 0755

- name: Apply Rally test patch
  command: ./rally_patch.sh
  changed_when: false
  args:
    chdir: /root/repos/

- name: client setup patch
  copy:
    dest: "/root/repos/client_setup.sh"
    content: |
      #!/bin/bash
      sudo -H -E pip install python-openstackclient python-heatclient --ignore-installed
      sudo -H mkdir -p /etc/openstack
      sudo -H chown -R $(id -un): /etc/openstack
      tee /etc/openstack/clouds.yaml << EOF
      clouds:
        openstack_helm:
          region_name: RegionOne
          identity_api_version: 3
          auth:
            username: 'admin'
            password: \${KEYSTONE_ADMIN_PASSWORD}
            project_name: 'admin'
            project_domain_name: 'default'
            user_domain_name: 'default'
            auth_url: 'http://keystone.openstack.svc.cluster.local/v3'
      EOF
    mode: 0755

- name: Apply client setup patch
  command: ./client_setup.sh
  changed_when: false
  args:
    chdir: /root/repos/

- name: New Keystone password patch
  copy:
    dest: "/root/repos/keystone_password.sh"
    content: |
      #!/bin/bash
      echo "" >> /root/repos/openstack-helm/tools/deployment/armada/020-armada-render-manifests.sh
      echo 'echo "Rendering clouds.yaml"' >> /root/repos/openstack-helm/tools/deployment/armada/020-armada-render-manifests.sh
      echo "envsubst < /etc/openstack/clouds.yaml > /root/repos/openstack-helm/clouds.yaml" >> /root/repos/openstack-helm/tools/deployment/armada/020-armada-render-manifests.sh
    mode: 0755

- name: Apply new Keystone password patch
  command: ./keystone_password.sh
  changed_when: false
  args:
    chdir: /root/repos/

- name: Copy armada-mini files patch
  copy:
    dest: "/root/repos/armada_mini.sh"
    content: |
      #!/bin/bash
      cp -rf /root/releng-xci/xci/installer/armada/manifests_mini/armada-ceph.yaml /root/repos/openstack-helm-infra/tools/deployment/armada/manifests/armada-ceph.yaml
    mode: 0755

- name: Apply armada-mini files patch
  command: ./armada_mini.sh
  changed_when: false
  args:
    chdir: /root/repos/
